<!DOCTYPE html>
<html>

<head>
    <title>Leaflet Map</title>
    <script src="/socket.io/socket.io.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <style>
        #map {
            height: 100vh;
            width: 100%;
        }

        #emojipicker {
            position: absolute;
            top: 10px;
            left: 10px;
            z-index: 1000;
            background: rgba(255, 255, 255, 0.9);
            border: 1px solid #ccc;
            border-radius: 8px;
            padding: 10px;
            display: flex;
            flex-wrap: wrap;
            width: 200px;
            gap: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
        }

        .emoji {
            width: 40px;
            height: 40px;
            cursor: pointer;
            border-radius: 6px;
            transition: transform 0.15s, box-shadow 0.15s;
        }

        .emoji:hover {
            transform: scale(1.1);
            box-shadow: 0 0 6px rgba(0, 0, 0, 0.3);
        }
    </style>
</head>

<body>
    <div id="emojipicker"></div>
    <div id="emojipicker">

    </div>
    <div id="map"></div>
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        function isSpammyEmojiName(name) {
            const n = name.trim().toLowerCase();

            if (n.length < 1) return true;

            if (n.length > 30) return true;

            if (/[0-9a-f]{6,8}$/i.test(n)) return true; // #ff0033 or ffffff
            if (/0x[0-9a-f]+$/i.test(n)) return true; // 0xffaabb

            if (/^[0-9\W_]+$/.test(n)) return true;

            const vowels = (n.match(/[aeiou]/g) || []).length;

            if (/[0-9a-f]{8,}/i.test(n)) return true;

            if (/(.)\1{4,}/.test(n)) return true;

            return false;
        }
        const socket = io()
        socket.on('emojis-list', emojis0 => {
            for (const e in emojis0) {
                if (isSpammyEmojiName(e)) continue;
                emojis.push(emojis0[e])
            }
            console.log(`Loaded ${emojis.length}/${Object.keys(emojis0).length} emojis`);
            emojis.slice(0, 100).forEach(src => {
                const img = document.createElement('img');
                img.src = src;
                // lazy load
                img.loading = 'lazy';
                img.className = 'emoji';
                img.onclick = () => selectEmoji(src);
                picker.appendChild(img);

            })
        })
        socket.emit('get-emojis-list')
        const data = [{
            lat: 51.505,
            long: -0.09
        }]
        const map = L.map('map').setView([data[0].lat, data[0].long], 13);

        L.tileLayer(
            //`https://cataas.com/cat?e={x}&b={y}&nfeirjnfeijy={z}`
            `http://localhost:3000/proxy/{z}/{x}/{y}.png`
            , {
                maxZoom: 19,
                attribution: 'Â© OpenStreetMap',
                errorTileUrl: 'https://saahild.com/oneko.gif'
            }).addTo(map);

        map.on("click", function (e) {
            const zoom = map.getZoom();
            const lat = e.latlng.lat;
            const lon = e.latlng.lng;

            const xTile = Math.floor((lon + 180) / 360 * Math.pow(2, zoom));
            const yTile = Math.floor(
                (1 - Math.log(Math.tan(lat * Math.PI / 180) + 1 / Math.cos(lat * Math.PI / 180)) / Math.PI) / 2 * Math.pow(2, zoom)
            );

            console.log(`Clicked tile: z=${zoom}, x=${xTile}, y=${yTile}`);
        });
        const picker = document.getElementById('emojipicker');

        const emojis = [];

        let selectedEmoji = null;
        function selectEmoji(src) {
            selectedEmoji = src;
            console.log("Selected emoji:", src);
        }
        map.on("click", function (e) {
            if (!selectedEmoji) return;

            const icon = L.divIcon({
                html: `<img src="${selectedEmoji}" style="width:32px;height:32px;">`,
                className: 'emoji-marker',
                iconSize: [32, 32]
            });

            L.marker([e.latlng.lat, e.latlng.lng], { icon }).addTo(map);
        });
    </script>
</body>


</html>