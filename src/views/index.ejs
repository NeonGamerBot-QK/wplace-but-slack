<!DOCTYPE html>
<html>

<head>
    <title>Leaflet Map</title>
    <script src="/socket.io/socket.io.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <style>
        #map {
            height: 100vh;
            width: 100%;
        }

        #emojipicker {
            position: absolute;
            top: 20px;
            left: 60px;
            z-index: 1000;
            background: rgba(255, 255, 255, 0.95);
            border: 1px solid #ccc;
            border-radius: 8px;
            padding: 10px;
            width: 240px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
            display: flex;
            flex-direction: column;
        }

        #emoji-search {
            width: 90%;
            padding: 6px 8px;
            border: 1px solid #ccc;
            border-radius: 6px;
            margin-bottom: 8px;
            font-size: 14px;
            outline: none;
        }

        #emoji-grid {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            max-height: 300px;
            overflow-y: auto;
        }

        .leaflet-tile-pane {
            filter: sepia(0.5) saturate(1.3) hue-rotate(-20deg) brightness(1.1);
        }

        .emoji {
            width: 40px;
            height: 40px;
            cursor: pointer;
            border-radius: 6px;
            transition: transform 0.15s, box-shadow 0.15s;
        }

        .emoji:hover {
            transform: scale(1.1);
            box-shadow: 0 0 6px rgba(0, 0, 0, 0.3);
        }

        #fall-leaves {
            pointer-events: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: 999;
        }

        .leaf {
            position: absolute;
            top: -50px;
            width: 32px;
            height: 32px;
            opacity: 0.9;
            transform: rotate(0deg);
            animation: fall linear forwards;
        }

        @keyframes fall {
            0% {
                transform: translateY(0) rotate(0deg);
            }

            100% {
                transform: translateY(110vh) rotate(360deg);
            }
        }
    </style>
</head>

<body>

    <div id="emojipicker">
        <input type="text" id="emoji-search" placeholder="Search emojis..." />
        <div id="emoji-grid"></div>
    </div>
    <div id="fall-leaves"></div>
    <div id="map"></div>

    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        function isSpammyEmojiName(name) {
            const n = name.trim().toLowerCase();
            if (n.length < 1) return true;
            if (n.length > 30) return true;
            if (/\#[0-9a-f]{6,8}$/i.test(n)) return true;
            const vowels = (n.match(/[aeiou]/g) || []).length;
            if (/[0-9a-f]{8,}/i.test(n)) return true;
            if (/(.)\1{4,}/.test(n)) return true;
            return false;
        }

        const socket = io();
        const emojis = [];
        const emojiData = {};
        const pickerGrid = document.getElementById('emoji-grid');
        const searchInput = document.getElementById('emoji-search');

        socket.on('emojis-list', emojis0 => {
            for (const name in emojis0) {
                if (isSpammyEmojiName(name)) continue;
                emojis.push({ name, src: emojis0[name] });
                emojiData[name] = emojis0[name];
            }
            console.log(`Loaded ${emojis.length}/${Object.keys(emojis0).length} emojis`);
            renderEmojis(emojis.slice(0, 100));
        });

        socket.emit('get-emojis-list');

        function renderEmojis(list) {
            pickerGrid.innerHTML = '';
            list.forEach(({ src, name }) => {
                const img = document.createElement('img');
                img.src = src;
                img.title = name;
                img.loading = 'lazy';
                img.className = 'emoji';
                img.onclick = () => selectEmoji(src);
                pickerGrid.appendChild(img);
            });
        }

        searchInput.addEventListener('input', e => {
            const query = e.target.value.toLowerCase();
            const filtered = emojis.filter(e => e.name.toLowerCase().includes(query));
            renderEmojis(filtered.slice(0, 100));
        });

        const map = L.map('map').setView([51.505, -0.09], 13);

        L.tileLayer(`/proxy/{z}/{x}/{y}.png`, {
            maxZoom: 19,
            attribution: 'Â© OpenStreetMap',
            errorTileUrl: 'https://saahild.com/oneko.gif'
        }).addTo(map);

        let selectedEmoji = null;
        function selectEmoji(src) {
            selectedEmoji = src;
            console.log("Selected emoji:", src);
        }

        map.on("click", function (e) {
            if (!selectedEmoji) return;
            const icon = L.divIcon({
                html: `<img src="${selectedEmoji}" style="width:32px;height:32px;">`,
                className: 'emoji-marker',
                iconSize: [32, 32]
            });
            L.marker([e.latlng.lat, e.latlng.lng], { icon }).addTo(map);
        });

    </script>
    <script>
        const leafImages = [
            "https://hc-cdn.hel1.your-objectstorage.com/s/v3/3b5a022c9caf363e2a753ead13cd95b2b082ee02_image-removebg-preview__1_.png",
            "https://hc-cdn.hel1.your-objectstorage.com/s/v3/994a62db2f62d9e2bf548ca8ed9a1e7903b397cb_image-removebg-preview.png",
        ];

        function spawnLeaf() {
            const leaf = document.createElement('img');
            leaf.src = leafImages[Math.floor(Math.random() * leafImages.length)];
            leaf.className = 'leaf';
            leaf.style.left = Math.random() * window.innerWidth + 'px';
            leaf.style.animationDuration = 5 + Math.random() * 5 + 's';
            leaf.style.animationDelay = Math.random() * 3 + 's';
            leaf.style.transform = `rotate(${Math.random() * 360}deg)`;
            document.getElementById('fall-leaves').appendChild(leaf);
            setTimeout(() => leaf.remove(), 10000);
        }

        setInterval(spawnLeaf, 400);
    </script>

</body>

</html>